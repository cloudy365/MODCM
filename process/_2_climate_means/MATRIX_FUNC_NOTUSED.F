C FILE: MATRIX_FUNC.F
C THESE SUBROUTINES ARE USED FOR LARGE SCALE MATRIX PROCESS IN PYTHON.
C ESCEPIALLY FOR THE CLIMATE MARBLE PROJECT.
C TO COMPILE, USE THE FOLLOWING BASH COMMAND: 
C
C f2py -m matrix_func -c MATRIX_FUNC.F
C
C TO GENERATE .SO FILE, WHICH CAN BE TREATED AS A NORMAL PYTHON MODULE 
C IN PYTHON PROGRAMMING.
C
C NOTE THAT FORTRAN OCCATIONALY RAISES SEGEMENTATION FAULT DUE TO SOME
C UNKNOWN REASONS. USE THEM WITH CAUTION.
C
C THE REALITY IS ... IT IS 5 TIMES SLOWER THAN THE ORIGINAL PYTHON
C BUILD-IN OPERATOR.

      SUBROUTINE FORTRAN_MATRIX_FUNC(NUM_DIM1, NUM_DIM2, NUM_DIM3,  
     & ITEM1, ITEM2, OPERATION,
     & RES)


C     SIZE OF EACH DIMENSION
      INTEGER NUM_DIM1, NUM_DIM2, NUM_DIM3

C     INPUT MATRIX THAT NEED TO BE ADDED/DIVIDED
      REAL, DIMENSION(NUM_DIM1, NUM_DIM2, NUM_DIM3) :: ITEM1, ITEM2

C     OPERATION, EITHER ADD OR DIV
      CHARACTER*3 OPERATION

C     OUTPUT ARRAY
      REAL, DIMENSION(NUM_DIM1, NUM_DIM2, NUM_DIM3) :: RES


Cf2py intent(in) num_dim1, num_dim2, num_dim3
Cf2py intent(in) item1, item2, operation
Cf2py intent(out) res
Cf2py depend(num_dim1) item1, item2, res
Cf2py depend(num_dim2) item1, item2, res
Cf2py depend(num_dim3) item1, item2, res
      

      IF (OPERATION .EQ. 'ADD') THEN
          PRINT *, 'DOING ADDITION'
          RES = ITEM1 + ITEM2
      ELSE IF (OPERATION .EQ. 'DIV') THEN
          RES = ITEM1 / ITEM2
      ELSE
          PRINT *, 'FUCKING WRONG'
      ENDIF

      END
C END FILE SAMPLE2GRID_MOD35.F

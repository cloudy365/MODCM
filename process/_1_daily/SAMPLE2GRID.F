C FILE: SAMPLE2GRID.F
C USEAGE:
C       f2py -m sample2grid -c SAMPLE2GRID.F
C TO GENERATE PYTHON USABLE .SO FILE

       SUBROUTINE SORT(N, VALID_X, VALID_Y,
     & N_1, LATS, LONS, LATS_IDX, LONS_IDX, 
     & RADS, SOLS, RADS_MAX,
     & CUMU_INSOL, CUMU_RAD, CUMU_NUM,
     & INSOL_SUM, RADIANCE_SUM, NUM_SUM)


C     NUMBER OF VALID SAMPLE (N) AND CORRESPONDING INDEXES
      INTEGER N
      INTEGER, DIMENSION(N) :: VALID_X, VALID_Y


C     NUMBER OF IMAGE HEIGHT AND CORRESPONDING LAT/LON (INDEXES)
      INTEGER N_1
      REAL, DIMENSION(N_1, 1354) :: LATS, LONS, LATS_IDX, LONS_IDX


C     GRANULE RADIANCE DATA
      REAL, DIMENSION(N_1, 1354, 7) :: RADS, SOLS
      REAL, DIMENSION(7) :: RADS_MAX


C     DAILY RADIANCE DATA
      REAL, DIMENSION(3600, 7200, 7) :: CUMU_INSOL, CUMU_RAD
      INTEGER, DIMENSION(3600, 7200, 7) :: CUMU_NUM


C     OUTPUT ARRAY
      REAL, DIMENSION(3600, 7200, 7) :: INSOL_SUM, RADIANCE_SUM
      INTEGER, DIMENSION(3600, 7200, 7) :: NUM_SUM


C     INTERNAL USE INDEXES
      INTEGER ISAMPLE, I, J, IDX_X, IDX_Y, ICHANNEL
      REAL ILAT, ILON, ILAT_PRE
      REAL, DIMENSION(7) :: IRAD, ISOL, INUM=0


Cf2py intent(in) n, n_1
Cf2py intent(in) valid_x, valid_y 
Cf2py intent(in) lats, lons, lats_idx, lons_idx
Cf2py intent(in) rads, sols, rads_max
Cf2py intent(in) cumu_insol, cumu_rad, cumu_num
Cf2py depend(n) valid_x, valid_y
Cf2py depend(n_1) lats, lons, lats_idx, lons_idx, rads, sols
Cf2py intent(out) insol_sum, radiance_sum, num_sum


      DO ISAMPLE = 1, N

C     ADD 1 SINCE FORTRAN STARTS FROM 1 WHILE LATS_IDX/LONS_IDX WERE 
C     GENERATED BY PYTHON.
         I = VALID_Y(ISAMPLE) + 1
         J = VALID_X(ISAMPLE) + 1

         ILAT = LATS(I, J)
         IF (I.EQ.1) THEN
            ILAT_PRE = ILAT
         ELSE
            ILAT_PRE = LATS(I-1, J)
         ENDIF
         ILON = LONS(I, J)
         IRAD = RADS(I, J, :)
         ISOL = SOLS(I, J, :)


C     FETCH INDEXES IN THE OUTPUT ARRAY.
C     ADD 1 DUE TO FORTRAN STARTS FROM 1 WHILE LATS_IDX/LONS_IDX WERE 
C     GENERATED BY PYTHON.
         IDX_Y = LATS_IDX(I, J) + 1
         IDX_X = LONS_IDX(I, J) + 1


C     CHECK LATLON ARRAY
         IF (ILAT.GE.ILAT_PRE .OR. ILAT.LE.-999. .OR. ILON.LE.-999
     & .OR. IDX_Y.EQ.3601 .OR. IDX_X.EQ.7201) THEN
            CYCLE
         ENDIF


C     CHECK RADIANCE ARRAY
         DO ICHANNEL = 1, 7
            IF (IRAD(ICHANNEL).LE.0
     & .OR. IRAD(ICHANNEL).GT.RADS_MAX(ICHANNEL)) THEN
               IRAD(ICHANNEL) = 0
               ISOL(ICHANNEL) = 0
               INUM(ICHANNEL) = 0
            ELSE
               INUM(ICHANNEL) = 1
            ENDIF
         ENDDO


C          WRITE(*, *) I, J, IDX_Y, IDX_X
         INSOL_SUM(IDX_Y, IDX_X, :) = 
     & INSOL_SUM(IDX_Y, IDX_X, :) + ISOL
         RADIANCE_SUM(IDX_Y, IDX_X, :) = 
     & RADIANCE_SUM(IDX_Y, IDX_X, :) + IRAD
         NUM_SUM(IDX_Y, IDX_X, :) = 
     & NUM_SUM(IDX_Y, IDX_X, :) + INUM

      ENDDO


      INSOL_SUM = INSOL_SUM + CUMU_INSOL
      RADIANCE_SUM = RADIANCE_SUM + CUMU_RAD
      NUM_SUM = NUM_SUM + CUMU_NUM


      END
C END FILE SAMPLE2GRID.F
